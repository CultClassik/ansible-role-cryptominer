---
- name: Create minebox user
  ansible.builtin.user:
    name: "{{ minebox_svc_acct }}"
    shell: "{{ default_shell }}"
    groups: video
    append: yes

- name: Set authorized keys taken from url
  ansible.posix.authorized_key:
    user: "{{ minebox_svc_acct }}"
    state: present
    key: "{{ minebox_ssh_pub_key }}"

- name: Ensure .bashrc exists
  ansible.builtin.file:
    path: "/home/{{ minebox_svc_acct }}/.bashrc"
    state: touch
    access_time: preserve
    modification_time: preserve
    mode: 0774
    owner: "{{ minebox_svc_acct }}"
    group: "{{ minebox_svc_acct }}"

- name: Update service account .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ minebox_svc_acct }}/.bashrc"
    line: export DISPLAY=:0
  notify: Update XDM

- name: Generate .screenrc for service account
  ansible.builtin.template:
    src: screenrc.j2
    dest: /home/{{ minebox_svc_acct }}/.screenrc
    mode: 0774
    owner: "{{ minebox_svc_acct }}"
    group: "{{ minebox_svc_acct }}"
  when: gpu_arch == 'nvidia'

- name: Generate .tmux.conf for service account
  template:
    src: tmux.conf.j2
    dest: /home/{{ minebox_svc_acct }}/.tmux.conf
    mode: 0774
    owner: "{{ minebox_svc_acct }}"
    group: "{{ minebox_svc_acct }}"

- name: Run tmux at login
  ansible.builtin.lineinfile:
    path: "/home/{{ minebox_svc_acct }}/.profile"
    line: tmux attach-session -t $SESSION:0

- name: Allow service account group to have passwordless sudo
  ansible.builtin.lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%{{ minebox_svc_acct }}"
    line: "%{{ minebox_svc_acct }} ALL=(ALL) NOPASSWD: ALL"
    validate: 'visudo -cf %s'
